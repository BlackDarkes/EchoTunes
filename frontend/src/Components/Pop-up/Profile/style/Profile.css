@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  position: absolute;
  top: 0;
  left: 0;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  /*Colors*/
  --white: #FFFFFF;
  --black: #000000;
  --gray: #555555;
  --dark: #14171A;
  --light-gray: #ADA8A8;
  --up-linear-gradient: #141124;
  --down-linear-gradient: #07135F;
  --linear-gradient: linear-gradient(to bottom right , var(--up-linear-gradient), var(--down-linear-gradient));
  /*Font*/
  --font-text: 18px;
  --font-title: 34px;
}

body {
  background-image: var(--linear-gradient);
  font-family: "Nunito Sans", serif;
  max-height: 100vh;
}
body::-webkit-scrollbar {
  width: 0;
}

#root {
  max-height: 100vh;
  width: 100vw;
}

input, textarea {
  resize: none;
  border: 0;
}
input:focus, textarea:focus {
  outline: 0;
}

a {
  color: inherit;
  font-weight: 200;
}
a, a:hover {
  text-decoration: none;
}

button {
  display: inline-flex;
  padding: 0;
  border: 0;
  background-color: transparent;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  cursor: pointer;
}

p {
  font-weight: 200;
}

img {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.popup {
  position: fixed;
  padding: 50px 0 30px 50px;
  top: 0;
  right: 0;
  width: min(100%, 415px);
  background-color: var(--black);
  color: var(--white);
  transform: translateX(100%);
  transition: 0.5s;
  z-index: 300;
}
.popup__close {
  position: absolute;
  top: 20px;
  right: 25px;
  color: var(--white);
  transition: 0.4s;
}
@media (hover: hover) {
  .popup__close:hover {
    color: var(--light-gray);
  }
}
@media (hover: none) {
  .popup__close:active {
    color: var(--light-gray);
  }
}
.popup-block {
  display: flex;
  flex-direction: column;
  row-gap: 30px;
  font-size: 18px;
}
.popup-block__button {
  transition: 0.4s;
}
@media (hover: hover) {
  .popup-block__button:hover {
    color: var(--light-gray);
  }
}
@media (hover: none) {
  .popup-block__button:active {
    color: var(--light-gray);
  }
}

.active {
  transform: translateX(0);
}/*# sourceMappingURL=Profile.css.map */